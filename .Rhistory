help
library("swirl")
install.packages("swirl")
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(x *p)
install.packages("knitr")
library("knitr", lib.loc="C:/Users/relizalde/Documents/R/win-library/3.0")
setwd("~/GitHub/RepData_PeerAssessment1")
myData <- read.csv("activity.csv", header=TRUE, sep=",")
View(myData)
myData[,2] <- as.Date(myData[,2], format="%Y/%m/%d")
View(myData)
myData <- read.csv("activity.csv", header=TRUE, sep=",")
myData[,2] <- as.Date(myData[,2], format="%Y-%m-%d")
View(myData)
hist(myData[,1], col="Red", xlab="Global Active Power (kilowatts)",
main="Total number of steps per day")
hist(myData[,1], col="Blue", xlab="Date", ylab='Number of Steps',
main="Total number of steps per day")
tapply(myData[,1],myData[,2], sum, na.rm = TRUE)
hist(tapply(myData[,1],myData[,2], sum, na.rm = TRUE), col="Blue", xlab="Date", ylab='Number of Steps',
main="Total number of steps per day")
myData2 <- tapply(myData[,1],myData[,2], sum, na.rm = TRUE)
View(myData2)
qnorm(93, mean = 100, sd = 100)
qnorm(93, mean = 100, sd = 10)
qnorm(.93, mean = 100, sd = 10)
qnorm(.93, mean = 100, sd = 100)
round(pnorm(93, mean = 100, sd = 10) * 100)
dnorm(5, mean = 100, sd = 10)
qnorm(5, mean = 100, sd = 10)
round(qnorm(.05, mean = 100, sd = 10, lower.tail = FALSE), 3)
round(qnorm(.95, mean = 100, sd = 10), 3)
round(pbinom(4, prob = .5, size = 6, lower.tail = FALSE) * 100, 1)
choose(9,3)
lchoose(9,3)
sample(9,3)
ppois(20, lambda = 16.5 * 2) * 100
ppois(20, lambda = 16.5 * 2) * 100
ppois(10, lambda = 5 * 3) * 100
ppois(10, lambda = 5 * 3)
pbinom(3, prob = .5, size = 5, lower.tail = FALSE)
0.75*0.3/(0.75*0.3+(1-0.52)*(1-.3))
qnorm(0.5, mean = 0.5, sd = sqrt(1 / 12 / 1000))
((1-0.7/0.8)*0.8)/((1-0.7/0.8)*0.8+(1-(0.8-0.7)*(1-0.8)/(1-0.8)))
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75 * 0.1)
data <- read.csv("activity.csv", header=TRUE)
clean_data <- data[which(data$steps != "NA"), ]
library(plyr)
total_by_day <- ddply(clean_data, .(date), summarise, steps=sum(steps))
hist(total_by_day$steps, main="Number of Steps",
xlab="Total number of steps taken each day", col="light blue")
hist(myData2, col="Blue", xlab="Date", ylab='Number of Steps',
main="Total number of steps per day")
hist(total_by_day$steps, main="Number of Steps",
xlab="Total number of steps taken each day", col="light blue")
View(total_by_day)
myData2 <- tapply(myData[,1],myData[,2], sum, na.rm = FALSE)
View(myData2)
myDataClean <- myData[which(myData$steps != "NA"), ]
View(myDataClean)
StepsPerDay <- ddply(myDataClean, .(date), summarize, steps=sum(steps))
View(StepsPerDay)
hist(StepsPerDay$steps, col="Blue", xlab="Number of Steps", main="Total number of steps per day")
hist(StepsPerDay$steps, col="Light Red", xlab="Number of Steps", main="Total number of steps per day")
hist(StepsPerDay$steps, col="coral", xlab="Number of Steps", main="Total number of steps per day")
mean(StepsPerDay$steps)
median(StepsPerDay$steps)
StepsAveragePerInterval <- ddply(myDataClean, .(interval), summarize, steps=mean(steps))
View(StepsAveragePerInterval)
View(StepsAveragePerInterval)
plot(StepsAveragePerInterval$interval, StepsAveragePerInterval$steps, type = "l", col='indianred1',
main="Average Daily Activity Pattern", xlab="5-minute interval", ylab="Average number of steps")
StepsAveragePerInterval[StepsAveragePerInterval$steps==max(StepsAveragePerInterval$steps),]
colnames(StepsAveragePerInterval)[2] <- "intervalAvg"
View(StepsAveragePerInterval)
StepsAveragePerInterval <- ddply(myDataClean, .(interval), summarize, steps=mean(steps))
colnames(StepsAveragePerInterval)[2] <- "StepsAvg"
View(StepsAveragePerInterval)
plot(StepsAveragePerInterval$interval, StepsAveragePerInterval$StepsAvg, type = "l", col='indianred1',
main="Average Daily Activity Pattern", xlab="5-minute interval", ylab="Average number of steps")
StepsAveragePerInterval[StepsAveragePerInterval$StepsAvg==max(StepsAveragePerInterval$StepsAvg),]
sum(is.na(myData$steps))
join(myData, StepsAveragePerInterval)
fillData <- join(myData, StepsAveragePerInterval)
View(fillData)
fillData <- join(myData, StepsAveragePerInterval, by="interval", type="left")
View(fillData)
is.na(fillData$steps)
fillData$StepsAvg[is.na(fillData$steps)]
fillData$steps[is.na(fillData$steps)]
fillData$steps[is.na(fillData$steps)] <- fillData$StepsAvg[is.na(fillData$steps)]
NewStepsPerDay <- ddply(fillData, .(date), summarize, steps=sum(steps))
hist(NewStepsPerDay$steps, col="seagreen3", xlab="Number of Steps", main="Total number of steps per day")
mean(NewStepsPerDay$steps)
median(NewStepsPerDay$steps)
View(fillData)
weekData <- fillData
weekData["weekday"] <- weekdays(fillData$date)
View(weekData)
weekData["DayType"] <- ifelse(weekData$weekday %in% c("Saturday", "Sunday"),"weekend", "weekday")
View(weekData)
StepsPerDayWK <- ddply(weekData, .(interval, DayType), summarize, steps=mean(steps))
View(StepsPerDayWK)
library(lattice)
xyplot(steps ~ interval | DayType, data = StepsPerDayWK, layout = c(1, 2), type="l")
library(ggplot2)
qplot(steps, data = StepsPerDayWK)
qplot(steps, data = StepsPerDayWK, facets= ~ DayType)
qplot(steps, data = StepsPerDayWK, facets= ~ DayType, type="l")
qplot(steps, data = StepsPerDayWK, facets= ~ DayType, geom="l")
qplot(steps, data = StepsPerDayWK, facets= ~ DayType, geom="line")
library(ggplot2)
qplot(steps, data = StepsPerDayWK, facets= ~ DayType, geom=c("line","point"))
qplot(steps, data = StepsPerDayWK, facets= interval ~ DayType, geom=c("line","point"))
qplot(steps, data = StepsPerDayWK, facets= ~ DayType, geom=c("line","point"))
qplot(steps, data = StepsPerDayWK, facets= ~ DayType, geom="line")
qplot(steps, data = StepsPerDayWK, geom="line", facets= ~ DayType)
library(ggplot2)
qplot(steps, data = StepsPerDayWK, geom="line", facets= ~ DayType)
library(ggplot2)
qplot(steps, data = StepsPerDayWK, facets= ~ DayType)
library(ggplot2)
qplot(interval, steps, data = StepsPerDayWK, facets= ~ DayType)
qplot(interval, steps, data = StepsPerDayWK, geom="line", facets= ~ DayType)
qplot(interval, steps, data = StepsPerDayWK, geom="line", facets= ~ DayType, color = DayType)
qplot(interval, steps, data = StepsPerDayWK, geom="line", facets= .~ DayType, color = DayType)
xyplot(steps ~ interval | DayType, data = StepsPerDayWK, layout = c(1, 2), type="l")
qplot(interval, steps, data = StepsPerDayWK, geom="line", facets= ~ DayType, color = DayType)
qplot(interval, steps, data = StepsPerDayWK, geom="line", facets=  DayType, color = DayType)
qplot(interval, steps, data = StepsPerDayWK, geom="line", color = DayType)
qplot(interval, steps, data = StepsPerDayWK, geom="line", color = DayType) + facet_wrap(~ DayType, nrow=2)
qplot(interval, steps, data = StepsPerDayWK, geom="line", color = DayType,
xlab="Interval", ylab="Number of steps") + facet_wrap(~ DayType, nrow=2)
